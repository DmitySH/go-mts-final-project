services:
  driver:
    container_name: driver-service
    build:
      context: .
      dockerfile: driver/Dockerfile
    restart: on-failure
    depends_on:
      - jaeger
      - otel-collector
      - prometheus
    ports:
      - 8481:84
      - 8081:80
    env_file:
      - driver/dev.env

  location:
    container_name: location-service
    build:
      context: .
      dockerfile: location/Dockerfile
    restart: on-failure
    depends_on:
      - jaeger
      - otel-collector
      - prometheus
    ports:
      - 8482:84
      - 8082:80
    env_file:
      - location/dev.env

  location-postgres:
    image: postgres:16.0
    container_name: "location-postgres"
    environment:
      POSTGRES_DB: "location"
      POSTGRES_USER: "location-service"
      POSTGRES_PASSWORD: "w87Pyw0WEsXEuORVFlLRyi"
      PGDATA: "/var/lib/postgresql/data/pgdata"
    volumes:
      - location_postgres_data:/var/lib/postgresql/data
    ports:
      - "5440:5432"

  jaeger:
    image: jaegertracing/all-in-one:1.52.0
    container_name: jaeger
    restart: on-failure
    ports:
      - 16686:16686

  otel-collector:
    image: otel/opentelemetry-collector:0.90.1
    container_name: otel-collector
    restart: on-failure
    command: [ "--config=/etc/otel-collector-config.yaml" ]
    volumes:
      - ./otel/config.yaml:/etc/otel-collector-config.yaml
    ports:
      - 1888:1888   # pprof extension
      - 8888:8888   # Prometheus prometrics exposed by the collector
      - 8889:8889   # Prometheus exporter prometrics
      - 13133:13133 # health_check extension
      - 4317:4317   # OTLP gRPC receiver
      - 55679:55679 # zpages extension
    depends_on:
      - jaeger

  prometheus:
    image: prom/prometheus:v2.48.0
    container_name: prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    restart: on-failure
    volumes:
      - ./prometheus:/etc/prometheus
      - prometheus_data:/prometheus

  grafana:
    image: grafana/grafana:10.2.2
    container_name: grafana
    restart: on-failure
    env_file:
      - grafana/conf.env
    ports:
      - 3000:3000
    volumes:
      - ./grafana/datasources:/etc/grafana/provisioning/datasources

volumes:
  prometheus_data:
  location_postgres_data:
